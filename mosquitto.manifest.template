loader.preload = "file:{{ gramine.libos }}"
libos.entrypoint = "/usr/sbin/mosquitto"
loader.log_level = "error"
loader.log_file = "gramine.log"

loader.env.LD_LIBRARY_PATH = "/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu"

loader.insecure__use_cmdline_argv = true

sys.enable_sigterm_injection = true

fs.mount.lib.type = "chroot"
fs.mount.lib.path = "/lib"
fs.mount.lib.uri = "file:{{ gramine.runtimedir() }}"

fs.mount.lib2.type = "chroot"
fs.mount.lib2.path = "/lib/x86_64-linux-gnu"
fs.mount.lib2.uri = "file:/lib/x86_64-linux-gnu"

fs.mount.lib3.type = "chroot"
fs.mount.lib3.path = "/usr/lib/x86_64-linux-gnu"
fs.mount.lib3.uri = "file:/usr/lib/x86_64-linux-gnu"

fs.mount.etc.type = "chroot"
fs.mount.etc.path = "/etc"
fs.mount.etc.uri = "file:/etc"

fs.mount.sbin.type = "chroot"
fs.mount.sbin.path = "/usr/sbin/"
fs.mount.sbin.uri = "file:/usr/sbin"

#sgx.debug=true
sgx.nonpie_binary = true
sgx.thread_num = 16

# Memcached does not fail explicitly when enclave memory is exhausted. Instead, Memcached goes into
# infinite loop without a listening socket. You can trigger this incorrect behavior by increasing
# the number of threads to 12 (each thread requires 128MB of memory): `mosquitto -t 12`. This is an
# issue in Memcached source code, not related to Gramine.
sgx.enclave_size = "1024M"

sgx.trusted_files = [
  "file:{{ gramine.runtimedir() }}/",
  "file:/lib/x86_64-linux-gnu/",
  "file:/usr/lib/x86_64-linux-gnu/",
  "file:/etc/mosquitto/mosquitto.conf",
  "file:/usr/sbin/mosquitto",
  "file:/etc/hosts.allow",
  "file:/etc/hosts.deny",
  "file:/etc/mosquitto/certs/docker.key",
  "file:/etc/mosquitto/certs/docker.crt",
  "file:/etc/mosquitto/ca_certificates/ca.crt",
  "file:/etc/mosquitto/conf.d/default.conf",
  
  "file:/etc/nsswitch.conf",
  "file:/etc/hosts",
  "file:/etc/group",
  "file:/etc/passwd",
  "file:/etc/gai.conf",
]
